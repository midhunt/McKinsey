"0","# Loading the training set"
"0","dtTrain <- fread("
"0","  paste0("
"0","    Sys.getenv(""MyGitRepo""),"
"0","    ""/McKinsey/Datasets/train_ajEneEa.csv"""
"0","  )"
"0",")"
"0","# Grouping Ages"
"0","dtTrain[, AgeBin := cut(age,"
"0","                        breaks = seq(0, 90, 10),"
"0","                        include.lowest = T)]"
"0","# Creating Bins and categorise missing values as Unknown"
"0","dtTrain[, BMIBin := cut(bmi,"
"0","                        breaks = c(0, 15, 16, 18.5, 25, 30, 35, 40, 100),"
"0","                        labels = c(""Very severely underweight"","
"0","                                   ""Severely underweight"","
"0","                                   ""Underweight"","
"0","                                   ""Normal"","
"0","                                   ""Overweight"","
"0","                                   ""Moderately obese"","
"0","                                   ""Severely obese"","
"0","                                   ""Very severely obese""),"
"0","                        include.lowest = T)]"
"0","dtTrain[is.na(BMIBin), BMIBin := ""Unknown""]"
"0","dtTrain[, BMIBin := factor(BMIBin,"
"0","                           levels = c(""Very severely underweight"","
"0","                                      ""Severely underweight"","
"0","                                      ""Underweight"","
"0","                                      ""Normal"","
"0","                                      ""Overweight"","
"0","                                      ""Moderately obese"","
"0","                                      ""Severely obese"","
"0","                                      ""Very severely obese"","
"0","                                      ""Unknown""))]"
"0","# Empty string in smoking_status are coverted as unknown"
"0","dtTrain[, smoking_status := ifelse(smoking_status == """","
"0","                                   ""Unknown"", smoking_status)]"
"0","# Grouping Glucose levels as bins"
"0","dtTrain[, GlucoseLevelBins := cut(avg_glucose_level, "
"0","                                  breaks = seq(50, 300, 50), "
"0","                                  include.lowest = T)]"
